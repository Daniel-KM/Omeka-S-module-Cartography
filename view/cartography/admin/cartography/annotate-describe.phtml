<?php
/** @var \Zend\View\Renderer\PhpRenderer $this */
$translate = $this->plugin('translate');

if (count($images)):

// The module is independant from the module Mapping, but some js are the same,
// so it is recommenced to choose one module or the other.
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet/leaflet.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet/leaflet.js', 'Cartography'));

// Edition via draw.
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-draw/leaflet.draw.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-draw/leaflet.draw.js', 'Cartography'));

// Style editor.
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-styleeditor/css/Leaflet.StyleEditor.min.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-styleeditor/javascript/Leaflet.StyleEditor.min.js', 'Cartography'));

// Leaflet paste.
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-paste/css/Leaflet.paste.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-paste/vendor/wicket.src.js', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-paste/vendor/wicket-leaflet.src.js', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-paste/js/Leaflet.Layer.WKT.js', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-paste/js/Leaflet.paste.js', 'Cartography'));

// Specific libraries.
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-fullscreen/leaflet.fullscreen.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-fullscreen/Leaflet.fullscreen.min.js', 'Cartography'));

// TODO Fit bounds and default view (js from module Mapping).
// $this->headScript()->appendFile($this->assetUrl('js/control.fit-bounds.js', 'Cartography'));
// $this->headScript()->appendFile($this->assetUrl('js/control.default-view.js', 'Cartography'));

// Integration in Omeka S.
$this->headLink()->appendStylesheet($this->assetUrl('css/cartography-admin.css', 'Cartography'));
$jsDescribe = empty($jsDescribe) ? '' : '
$(document).ready( function() {
' . $jsDescribe . '
});';
$script = 'var basePath = ' . json_encode($this->basePath(), 320) . ';
var resourceId = ' . $resource->id() . ';
var mainImages = ' . json_encode($images, 320) . ';
var oaMotivatedBySelect = ' . json_encode($oaMotivatedBySelect, 320) . ';
var oaHasPurposeSelect = ' . json_encode($oaHasPurposeSelect, 320) . ';
var cartographyUncertaintySelect = ' . json_encode($cartographyUncertaintySelect, 320) . ';'
    . $jsDescribe;
$this->headScript()->appendScript($script);
$this->headScript()->appendFile($this->assetUrl('js/cartography-admin-describe.js', 'Cartography'));

endif;
?>
<fieldset id="describe" class="section">
    <legend id="cartography-legend"><?php echo $translate('Annotate an image'); ?></legend>
<?php if (empty($images)): ?>
    <p><?php echo $translate('There is no image attached to this resource.'); ?></p>
<?php else: ?>
    <div id="cartography-media" style="height:800px;"></div>
    <div class="description"><?php echo $this->setting('cartography_user_guide'); ?></div>
<?php endif; ?>
</fieldset>
