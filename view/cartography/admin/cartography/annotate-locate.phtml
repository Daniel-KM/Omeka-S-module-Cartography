<?php
/** @var \Zend\View\Renderer\PhpRenderer $this */
$translate = $this->plugin('translate');

// The module is independant from the module Mapping, but some js are the same,
// so it is recommenced to choose one module or the other.
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet/leaflet.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet/leaflet.js', 'Cartography'));

// Edition via draw.
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-draw/leaflet.draw.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-draw/leaflet.draw.js', 'Cartography'));

// Style editor.
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-styleeditor/css/Leaflet.StyleEditor.min.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-styleeditor/javascript/Leaflet.StyleEditor.min.js', 'Cartography'));

// Leaflet paste.
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-paste/css/Leaflet.paste.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-paste/vendor/wicket.src.js', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-paste/vendor/wicket-leaflet.src.js', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-paste/js/Leaflet.Layer.WKT.js', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-paste/js/Leaflet.paste.js', 'Cartography'));

// Specific libraries.
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-fullscreen/leaflet.fullscreen.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-fullscreen/Leaflet.fullscreen.min.js', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/terraformer/terraformer.min.js', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/terraformer-arcgis-parser/terraformer-arcgis-parser.min.js', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/terraformer-wkt-parser/terraformer-wkt-parser.min.js', 'Cartography'));

// TODO Fit bounds and default view (js from module Mapping).
// $this->headScript()->appendFile($this->assetUrl('js/control.fit-bounds.js', 'Cartography'));
// $this->headScript()->appendFile($this->assetUrl('js/control.default-view.js', 'Cartography'));

// Geosearch.
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-providers/leaflet-providers.min.js', 'Cartography'));
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-geosearch/style.css', 'Cartography'));
$this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-geosearch/leaflet.css', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-geosearch/bundle.min.js', 'Cartography'));

// Integration of wmts layer.
// $this->headScript()->appendFile($this->assetUrl('vendor/leaflet-tilelayer-wmts/leaflet-tilelayer-wmts.js', 'Cartography'));
$this->headScript()->appendFile($this->assetUrl('vendor/leaflet-tilelayer-wmts/leaflet-tilelayer-wmts-src.js', 'Cartography'));

// Add wms layers if any.
if ($wmsLayers) {
    $this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-markercluster/MarkerCluster.css', 'Cartography'));
    $this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-markercluster/MarkerCluster.Default.css', 'Cartography'));
    $this->headScript()->appendFile($this->assetUrl('vendor/leaflet-markercluster/leaflet.markercluster.js', 'Cartography'));
    $this->headLink()->appendStylesheet($this->assetUrl('vendor/leaflet-groupedlayercontrol/leaflet.groupedlayercontrol.min.css', 'Cartography'));
    $this->headScript()->appendFile($this->assetUrl('vendor/leaflet-groupedlayercontrol/leaflet.groupedlayercontrol.min.js', 'Cartography'));
    // From module Mapping.
    $this->headScript()->appendFile($this->assetUrl('js/control.opacity.js', 'Cartography'));
}

// Integration in Omeka S.
$this->headLink()->appendStylesheet($this->assetUrl('css/cartography-admin.css', 'Cartography'));
$jsLocate = empty($jsLocate) ? '' : '
$(document).ready( function() {
' . $jsLocate . '
});';
// TODO Fetch geometries dynamically.
$script = 'var basePath = ' . json_encode($this->basePath(), 320) . ';
var resourceId = ' . $resource->id() . ';
var wmsLayers = ' . json_encode($wmsLayers, 320) . ';
var geometries = ' . json_encode($geometries, 320) . ';
var oaHasPurposeSelect = ' . json_encode($oaHasPurposeSelect, 320) . ';
var oaMotivatedBySelect = ' . json_encode($oaMotivatedBySelect, 320) . ';
var cartographyUncertaintySelect = ' . json_encode($cartographyUncertaintySelect, 320) . ';'
    . $jsLocate;
$this->headScript()->appendScript($script);
$this->headScript()->appendFile($this->assetUrl('js/cartography-admin.js', 'Cartography'));

?>
<?php // TODO Find a better way to disable location motivation (via module config and js). ?>
<style>
#locate .editor-enabled > div:nth-child(2) > div:nth-child(2) > div:nth-child(1) {display:none;}
</style>
<fieldset id="locate" class="section">
    <legend id="cartography-legend"><?php echo $translate('Geolocate item'); ?></legend>
    <div id="cartography-map" style="height:800px;"></div>
    <div class="description"><?php echo $this->setting('cartography_user_guide'); ?></div>
</fieldset>
